<?xml version="1.0" ?>
<root class="FileAST">
  <ext class="Typedef" name="ES_EventTyp_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="ES_EventTyp_t" quals="[]" align="">
      <type class="Enum" name="">
        <values class="EnumeratorList">
          <enumerators class="Enumerator" name="ES_NO_EVENT"/>
          <enumerators class="Enumerator" name="ES_ERROR"/>
          <enumerators class="Enumerator" name="ES_INIT"/>
          <enumerators class="Enumerator" name="ES_ENTRY"/>
          <enumerators class="Enumerator" name="ES_EXIT"/>
          <enumerators class="Enumerator" name="ES_KEYINPUT"/>
          <enumerators class="Enumerator" name="ES_LISTEVENTS"/>
          <enumerators class="Enumerator" name="ES_TIMEOUT"/>
          <enumerators class="Enumerator" name="ES_TIMERACTIVE"/>
          <enumerators class="Enumerator" name="ES_TIMERSTOPPED"/>
          <enumerators class="Enumerator" name="BATTERY_CONNECTED"/>
          <enumerators class="Enumerator" name="BATTERY_DISCONNECTED"/>
          <enumerators class="Enumerator" name="LIGHT_TO_DARK"/>
          <enumerators class="Enumerator" name="DARK_TO_LIGHT"/>
          <enumerators class="Enumerator" name="BUMPER_PRESSED"/>
          <enumerators class="Enumerator" name="BUMPER_RELEASED"/>
          <enumerators class="Enumerator" name="NUMBEROFEVENTS"/>
        </values>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="EventNames" quals="['const']" align="[]" storage="['static']" funcspec="[]">
    <type class="ArrayDecl" dim_quals="[]">
      <type class="PtrDecl" quals="[]">
        <type class="TypeDecl" declname="EventNames" quals="['const']" align="">
          <type class="IdentifierType" names="['char']"/>
        </type>
      </type>
    </type>
    <init class="InitList">
      <exprs class="Constant" type="string" value="&quot;ES_NO_EVENT&quot;"/>
      <exprs class="Constant" type="string" value="&quot;ES_ERROR&quot;"/>
      <exprs class="Constant" type="string" value="&quot;ES_INIT&quot;"/>
      <exprs class="Constant" type="string" value="&quot;ES_ENTRY&quot;"/>
      <exprs class="Constant" type="string" value="&quot;ES_EXIT&quot;"/>
      <exprs class="Constant" type="string" value="&quot;ES_KEYINPUT&quot;"/>
      <exprs class="Constant" type="string" value="&quot;ES_LISTEVENTS&quot;"/>
      <exprs class="Constant" type="string" value="&quot;ES_TIMEOUT&quot;"/>
      <exprs class="Constant" type="string" value="&quot;ES_TIMERACTIVE&quot;"/>
      <exprs class="Constant" type="string" value="&quot;ES_TIMERSTOPPED&quot;"/>
      <exprs class="Constant" type="string" value="&quot;BATTERY_CONNECTED&quot;"/>
      <exprs class="Constant" type="string" value="&quot;BATTERY_DISCONNECTED&quot;"/>
      <exprs class="Constant" type="string" value="&quot;LIGHT_TO_DARK&quot;"/>
      <exprs class="Constant" type="string" value="&quot;DARK_TO_LIGHT&quot;"/>
      <exprs class="Constant" type="string" value="&quot;BUMPER_PRESSED&quot;"/>
      <exprs class="Constant" type="string" value="&quot;BUMPER_RELEASED&quot;"/>
      <exprs class="Constant" type="string" value="&quot;NUMBEROFEVENTS&quot;"/>
    </init>
  </ext>
  <ext class="Typedef" name="_Double" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="_Double" quals="[]" align="">
      <type class="IdentifierType" names="['double']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uintptr_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uintptr_t" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="intptr_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="intptr_t" quals="[]" align="">
      <type class="IdentifierType" names="['int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="int8_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="int8_t" quals="[]" align="">
      <type class="IdentifierType" names="['signed', 'char']"/>
    </type>
  </ext>
  <ext class="Typedef" name="int16_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="int16_t" quals="[]" align="">
      <type class="IdentifierType" names="['short', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="int32_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="int32_t" quals="[]" align="">
      <type class="IdentifierType" names="['int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="int64_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="int64_t" quals="[]" align="">
      <type class="IdentifierType" names="['long', 'long', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="intmax_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="intmax_t" quals="[]" align="">
      <type class="IdentifierType" names="['long', 'long', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uint8_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uint8_t" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'char']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uint16_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uint16_t" quals="[]" align="">
      <type class="IdentifierType" names="['short', 'unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uint32_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uint32_t" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uint64_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uint64_t" quals="[]" align="">
      <type class="IdentifierType" names="['long', 'long', 'unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uintmax_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uintmax_t" quals="[]" align="">
      <type class="IdentifierType" names="['long', 'long', 'unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="int_fast8_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="int_fast8_t" quals="[]" align="">
      <type class="IdentifierType" names="['int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="int_fast64_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="int_fast64_t" quals="[]" align="">
      <type class="IdentifierType" names="['long', 'long', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="int_least8_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="int_least8_t" quals="[]" align="">
      <type class="IdentifierType" names="['signed', 'char']"/>
    </type>
  </ext>
  <ext class="Typedef" name="int_least16_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="int_least16_t" quals="[]" align="">
      <type class="IdentifierType" names="['short', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="int_least32_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="int_least32_t" quals="[]" align="">
      <type class="IdentifierType" names="['int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="int_least64_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="int_least64_t" quals="[]" align="">
      <type class="IdentifierType" names="['long', 'long', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uint_fast8_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uint_fast8_t" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uint_fast64_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uint_fast64_t" quals="[]" align="">
      <type class="IdentifierType" names="['long', 'long', 'unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uint_least8_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uint_least8_t" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'char']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uint_least16_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uint_least16_t" quals="[]" align="">
      <type class="IdentifierType" names="['short', 'unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uint_least32_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uint_least32_t" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uint_least64_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uint_least64_t" quals="[]" align="">
      <type class="IdentifierType" names="['long', 'long', 'unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="int_fast16_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="int_fast16_t" quals="[]" align="">
      <type class="IdentifierType" names="['int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="int_fast32_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="int_fast32_t" quals="[]" align="">
      <type class="IdentifierType" names="['int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uint_fast16_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uint_fast16_t" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="uint_fast32_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="uint_fast32_t" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="_Double" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="_Double" quals="[]" align="">
      <type class="IdentifierType" names="['double']"/>
    </type>
  </ext>
  <ext class="Typedef" name="wchar_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="wchar_t" quals="[]" align="">
      <type class="IdentifierType" names="['int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="imaxdiv_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="imaxdiv_t" quals="[]" align="">
      <type class="Struct" name="">
        <decls class="Decl" name="quot" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="quot" quals="[]" align="">
            <type class="IdentifierType" names="['intmax_t']"/>
          </type>
        </decls>
        <decls class="Decl" name="rem" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="rem" quals="[]" align="">
            <type class="IdentifierType" names="['intmax_t']"/>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="imaxabs" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['intmax_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="imaxabs" quals="[]" align="">
        <type class="IdentifierType" names="['intmax_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="imaxdiv" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['intmax_t']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['intmax_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="imaxdiv" quals="[]" align="">
        <type class="IdentifierType" names="['imaxdiv_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="strtoimax" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="PtrDecl" quals="[]">
              <type class="TypeDecl" declname="" quals="[]" align="">
                <type class="IdentifierType" names="['char']"/>
              </type>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="strtoimax" quals="[]" align="">
        <type class="IdentifierType" names="['intmax_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="strtoumax" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="PtrDecl" quals="[]">
              <type class="TypeDecl" declname="" quals="[]" align="">
                <type class="IdentifierType" names="['char']"/>
              </type>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="strtoumax" quals="[]" align="">
        <type class="IdentifierType" names="['uintmax_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="wcstoimax" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['wchar_t']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="PtrDecl" quals="[]">
              <type class="TypeDecl" declname="" quals="[]" align="">
                <type class="IdentifierType" names="['wchar_t']"/>
              </type>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="wcstoimax" quals="[]" align="">
        <type class="IdentifierType" names="['intmax_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="wcstoumax" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['wchar_t']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="PtrDecl" quals="[]">
              <type class="TypeDecl" declname="" quals="[]" align="">
                <type class="IdentifierType" names="['wchar_t']"/>
              </type>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="wcstoumax" quals="[]" align="">
        <type class="IdentifierType" names="['uintmax_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="ES_Event" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="ES_Event" quals="[]" align="">
      <type class="Struct" name="ES_Event_t">
        <decls class="Decl" name="EventType" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="EventType" quals="[]" align="">
            <type class="IdentifierType" names="['ES_EventTyp_t']"/>
          </type>
        </decls>
        <decls class="Decl" name="EventParam" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="EventParam" quals="[]" align="">
            <type class="IdentifierType" names="['uint16_t']"/>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="ES_TimerReturn_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="ES_TimerReturn_t" quals="[]" align="">
      <type class="Enum" name="">
        <values class="EnumeratorList">
          <enumerators class="Enumerator" name="ES_Timer_ERR">
            <value class="UnaryOp" op="-">
              <expr class="Constant" type="int" value="1"/>
            </value>
          </enumerators>
          <enumerators class="Enumerator" name="ES_Timer_ACTIVE">
            <value class="Constant" type="int" value="1"/>
          </enumerators>
          <enumerators class="Enumerator" name="ES_Timer_OK">
            <value class="Constant" type="int" value="0"/>
          </enumerators>
          <enumerators class="Enumerator" name="ES_Timer_NOT_ACTIVE">
            <value class="Constant" type="int" value="0"/>
          </enumerators>
        </values>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_Timer_Init" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_Timer_Init" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_Timer_InitTimer" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="Num" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Num" quals="[]" align="">
            <type class="IdentifierType" names="['uint8_t']"/>
          </type>
        </params>
        <params class="Decl" name="NewTime" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="NewTime" quals="[]" align="">
            <type class="IdentifierType" names="['uint32_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_Timer_InitTimer" quals="[]" align="">
        <type class="IdentifierType" names="['ES_TimerReturn_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_Timer_SetTimer" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="Num" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Num" quals="[]" align="">
            <type class="IdentifierType" names="['uint8_t']"/>
          </type>
        </params>
        <params class="Decl" name="NewTime" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="NewTime" quals="[]" align="">
            <type class="IdentifierType" names="['uint32_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_Timer_SetTimer" quals="[]" align="">
        <type class="IdentifierType" names="['ES_TimerReturn_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_Timer_StartTimer" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="Num" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Num" quals="[]" align="">
            <type class="IdentifierType" names="['uint8_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_Timer_StartTimer" quals="[]" align="">
        <type class="IdentifierType" names="['ES_TimerReturn_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_Timer_StopTimer" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="Num" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Num" quals="[]" align="">
            <type class="IdentifierType" names="['uint8_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_Timer_StopTimer" quals="[]" align="">
        <type class="IdentifierType" names="['ES_TimerReturn_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_Timer_GetTime" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_Timer_GetTime" quals="[]" align="">
        <type class="IdentifierType" names="['uint32_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="CheckFunc" quals="[]" storage="['typedef']">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="CheckFunc" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="pCheckFunc" quals="[]" storage="['typedef']">
    <type class="PtrDecl" quals="[]">
      <type class="TypeDecl" declname="pCheckFunc" quals="[]" align="">
        <type class="IdentifierType" names="['CheckFunc']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_CheckUserEvents" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_CheckUserEvents" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="InitKeyboardInput" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="Priority" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Priority" quals="[]" align="">
            <type class="IdentifierType" names="['uint8_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="InitKeyboardInput" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="PostKeyboardInput" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="ThisEvent" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="ThisEvent" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="PostKeyboardInput" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="RunKeyboardInput" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="ThisEvent" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="ThisEvent" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="RunKeyboardInput" quals="[]" align="">
        <type class="IdentifierType" names="['ES_Event']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="KeyboardInput_PrintEvents" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="KeyboardInput_PrintEvents" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="BitNum2ClrMask" quals="['const']" align="[]" storage="['extern']" funcspec="[]">
    <type class="ArrayDecl" dim_quals="[]">
      <type class="TypeDecl" declname="BitNum2ClrMask" quals="['const']" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="BitNum2SetMask" quals="['const']" align="[]" storage="['extern']" funcspec="[]">
    <type class="ArrayDecl" dim_quals="[]">
      <type class="TypeDecl" declname="BitNum2SetMask" quals="['const']" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Byte2MSBitNum" quals="['const']" align="[]" storage="['extern']" funcspec="[]">
    <type class="ArrayDecl" dim_quals="[]">
      <type class="TypeDecl" declname="Byte2MSBitNum" quals="['const']" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
      <dim class="Constant" type="int" value="255"/>
    </type>
  </ext>
  <ext class="Decl" name="_CCR_temp" quals="[]" align="[]" storage="['extern']" funcspec="[]">
    <type class="TypeDecl" declname="_CCR_temp" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'char']"/>
    </type>
  </ext>
  <ext class="Typedef" name="PostFunc_t" quals="[]" storage="['typedef']">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="PostFunc_t" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="pPostFunc" quals="[]" storage="['typedef']">
    <type class="PtrDecl" quals="[]">
      <type class="TypeDecl" declname="pPostFunc" quals="[]" align="">
        <type class="IdentifierType" names="['PostFunc_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_PostList00" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_PostList00" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_PostList01" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_PostList01" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_PostList02" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_PostList02" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_PostList03" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_PostList03" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_PostList04" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_PostList04" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_PostList05" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_PostList05" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_PostList06" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_PostList06" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_PostList07" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_PostList07" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="GetMSBitNum" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="Value" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Value" quals="[]" align="">
            <type class="IdentifierType" names="['uint8_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="GetMSBitNum" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="GetClearMask" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="BitNum" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="BitNum" quals="[]" align="">
            <type class="IdentifierType" names="['uint8_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="GetClearMask" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="GetSetMask" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="BitNum" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="BitNum" quals="[]" align="">
            <type class="IdentifierType" names="['uint8_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="GetSetMask" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_InitQueue" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="pBlock" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="pBlock" quals="[]" align="">
              <type class="IdentifierType" names="['ES_Event']"/>
            </type>
          </type>
        </params>
        <params class="Decl" name="BlockSize" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="BlockSize" quals="[]" align="">
            <type class="IdentifierType" names="['unsigned', 'char']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_InitQueue" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_EnQueueFIFO" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="pBlock" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="pBlock" quals="[]" align="">
              <type class="IdentifierType" names="['ES_Event']"/>
            </type>
          </type>
        </params>
        <params class="Decl" name="Event2Add" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Event2Add" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_EnQueueFIFO" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_DeQueue" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="pBlock" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="pBlock" quals="[]" align="">
              <type class="IdentifierType" names="['ES_Event']"/>
            </type>
          </type>
        </params>
        <params class="Decl" name="pReturnEvent" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="pReturnEvent" quals="[]" align="">
              <type class="IdentifierType" names="['ES_Event']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_DeQueue" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_IsQueueEmpty" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="pBlock" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="pBlock" quals="[]" align="">
              <type class="IdentifierType" names="['ES_Event']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_IsQueueEmpty" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="InitTemplateFSM" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="Priority" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Priority" quals="[]" align="">
            <type class="IdentifierType" names="['uint8_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="InitTemplateFSM" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="PostTemplateFSM" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="ThisEvent" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="ThisEvent" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="PostTemplateFSM" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="RunTemplateFSM" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="ThisEvent" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="ThisEvent" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="RunTemplateFSM" quals="[]" align="">
        <type class="IdentifierType" names="['ES_Event']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_AddTattlePoint" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="FunctionName" quals="['const']" align="[]" storage="[]" funcspec="[]">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="FunctionName" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Decl" name="StateName" quals="['const']" align="[]" storage="[]" funcspec="[]">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="StateName" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Decl" name="ThisEvent" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="ThisEvent" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_AddTattlePoint" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_CheckTail" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="FunctionName" quals="['const']" align="[]" storage="[]" funcspec="[]">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="FunctionName" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_CheckTail" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="ES_Return_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="ES_Return_t" quals="[]" align="">
      <type class="Enum" name="">
        <values class="EnumeratorList">
          <enumerators class="Enumerator" name="Success">
            <value class="Constant" type="int" value="0"/>
          </enumerators>
          <enumerators class="Enumerator" name="FailedPost">
            <value class="Constant" type="int" value="1"/>
          </enumerators>
          <enumerators class="Enumerator" name="FailedRun"/>
          <enumerators class="Enumerator" name="FailedPointer"/>
          <enumerators class="Enumerator" name="FailedIndex"/>
          <enumerators class="Enumerator" name="FailedInit"/>
        </values>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_Initialize" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_Initialize" quals="[]" align="">
        <type class="IdentifierType" names="['ES_Return_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_Run" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_Run" quals="[]" align="">
        <type class="IdentifierType" names="['ES_Return_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_PostAll" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="ThisEvent" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="ThisEvent" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_PostAll" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ES_PostToService" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="WhichService" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="WhichService" quals="[]" align="">
            <type class="IdentifierType" names="['uint8_t']"/>
          </type>
        </params>
        <params class="Decl" name="ThisEvent" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="ThisEvent" quals="[]" align="">
            <type class="IdentifierType" names="['ES_Event']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ES_PostToService" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="_Double" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="_Double" quals="[]" align="">
      <type class="IdentifierType" names="['double']"/>
    </type>
  </ext>
  <ext class="Typedef" name="max_align_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="max_align_t" quals="[]" align="">
      <type class="Struct" name="">
        <decls class="Decl" name="__ll" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="__ll" quals="[]" align="">
            <type class="IdentifierType" names="['long', 'long']"/>
          </type>
        </decls>
        <decls class="Decl" name="__ld" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="__ld" quals="[]" align="">
            <type class="IdentifierType" names="['long', 'double']"/>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="size_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="size_t" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="ptrdiff_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="ptrdiff_t" quals="[]" align="">
      <type class="IdentifierType" names="['int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="BOOL" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="BOOL" quals="[]" align="">
      <type class="Enum" name="_BOOL">
        <values class="EnumeratorList">
          <enumerators class="Enumerator" name="FALSE">
            <value class="Constant" type="int" value="0"/>
          </enumerators>
          <enumerators class="Enumerator" name="TRUE"/>
        </values>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="BIT" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="BIT" quals="[]" align="">
      <type class="Enum" name="_BIT">
        <values class="EnumeratorList">
          <enumerators class="Enumerator" name="CLEAR">
            <value class="Constant" type="int" value="0"/>
          </enumerators>
          <enumerators class="Enumerator" name="SET"/>
        </values>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="INT" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="INT" quals="[]" align="">
      <type class="IdentifierType" names="['signed', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="INT8" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="INT8" quals="[]" align="">
      <type class="IdentifierType" names="['signed', 'char']"/>
    </type>
  </ext>
  <ext class="Typedef" name="INT16" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="INT16" quals="[]" align="">
      <type class="IdentifierType" names="['signed', 'short', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="INT32" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="INT32" quals="[]" align="">
      <type class="IdentifierType" names="['signed', 'long', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="INT64" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="INT64" quals="[]" align="">
      <type class="IdentifierType" names="['signed', 'long', 'long']"/>
    </type>
  </ext>
  <ext class="Typedef" name="UINT" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="UINT" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="UINT8" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="UINT8" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'char']"/>
    </type>
  </ext>
  <ext class="Typedef" name="UINT16" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="UINT16" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'short', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="UINT32" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="UINT32" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'long', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="UINT64" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="UINT64" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'long', 'long']"/>
    </type>
  </ext>
  <ext class="Typedef" name="UINT8_VAL" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="UINT8_VAL" quals="[]" align="">
      <type class="Union" name="">
        <decls class="Decl" name="Val" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Val" quals="[]" align="">
            <type class="IdentifierType" names="['UINT8']"/>
          </type>
        </decls>
        <decls class="Decl" name="bits" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="bits" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="b0" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b0" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b1" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b1" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b2" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b2" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b3" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b3" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b4" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b4" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b5" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b5" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b6" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b6" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b7" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b7" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
            </type>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="UINT8_BITS" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="UINT8_BITS" quals="[]" align="">
      <type class="Union" name="">
        <decls class="Decl" name="Val" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Val" quals="[]" align="">
            <type class="IdentifierType" names="['UINT8']"/>
          </type>
        </decls>
        <decls class="Decl" name="bits" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="bits" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="b0" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b0" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b1" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b1" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b2" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b2" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b3" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b3" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b4" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b4" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b5" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b5" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b6" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b6" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b7" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b7" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
            </type>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="UINT16_VAL" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="UINT16_VAL" quals="[]" align="">
      <type class="Union" name="">
        <decls class="Decl" name="Val" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Val" quals="[]" align="">
            <type class="IdentifierType" names="['UINT16']"/>
          </type>
        </decls>
        <decls class="Decl" name="v" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="v" quals="[]" align="">
              <type class="IdentifierType" names="['UINT8']"/>
            </type>
            <dim class="Constant" type="int" value="2"/>
          </type>
        </decls>
        <decls class="Decl" name="byte" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="byte" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="LB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="LB" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
              </decls>
              <decls class="Decl" name="HB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="HB" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="bits" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="bits" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="b0" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b0" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b1" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b1" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b2" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b2" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b3" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b3" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b4" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b4" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b5" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b5" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b6" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b6" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b7" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b7" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b8" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b8" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b9" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b9" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b10" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b10" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b11" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b11" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b12" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b12" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b13" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b13" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b14" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b14" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b15" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b15" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
            </type>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="UINT16_BITS" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="UINT16_BITS" quals="[]" align="">
      <type class="Union" name="">
        <decls class="Decl" name="Val" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Val" quals="[]" align="">
            <type class="IdentifierType" names="['UINT16']"/>
          </type>
        </decls>
        <decls class="Decl" name="v" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="v" quals="[]" align="">
              <type class="IdentifierType" names="['UINT8']"/>
            </type>
            <dim class="Constant" type="int" value="2"/>
          </type>
        </decls>
        <decls class="Decl" name="byte" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="byte" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="LB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="LB" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
              </decls>
              <decls class="Decl" name="HB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="HB" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="bits" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="bits" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="b0" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b0" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b1" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b1" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b2" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b2" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b3" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b3" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b4" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b4" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b5" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b5" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b6" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b6" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b7" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b7" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b8" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b8" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b9" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b9" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b10" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b10" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b11" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b11" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b12" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b12" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b13" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b13" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b14" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b14" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b15" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b15" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
            </type>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="UINT32_VAL" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="UINT32_VAL" quals="[]" align="">
      <type class="Union" name="">
        <decls class="Decl" name="Val" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Val" quals="[]" align="">
            <type class="IdentifierType" names="['UINT32']"/>
          </type>
        </decls>
        <decls class="Decl" name="w" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="w" quals="[]" align="">
              <type class="IdentifierType" names="['UINT16']"/>
            </type>
            <dim class="Constant" type="int" value="2"/>
          </type>
        </decls>
        <decls class="Decl" name="v" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="v" quals="[]" align="">
              <type class="IdentifierType" names="['UINT8']"/>
            </type>
            <dim class="Constant" type="int" value="4"/>
          </type>
        </decls>
        <decls class="Decl" name="word" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="word" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="LW" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="LW" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT16']"/>
                </type>
              </decls>
              <decls class="Decl" name="HW" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="HW" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT16']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="byte" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="byte" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="LB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="LB" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
              </decls>
              <decls class="Decl" name="HB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="HB" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
              </decls>
              <decls class="Decl" name="UB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="UB" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
              </decls>
              <decls class="Decl" name="MB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="MB" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="wordUnion" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="wordUnion" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="low" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="low" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT16_VAL']"/>
                </type>
              </decls>
              <decls class="Decl" name="high" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="high" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT16_VAL']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="bits" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="bits" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="b0" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b0" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b1" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b1" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b2" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b2" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b3" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b3" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b4" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b4" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b5" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b5" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b6" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b6" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b7" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b7" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b8" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b8" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b9" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b9" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b10" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b10" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b11" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b11" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b12" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b12" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b13" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b13" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b14" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b14" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b15" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b15" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b16" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b16" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b17" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b17" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b18" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b18" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b19" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b19" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b20" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b20" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b21" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b21" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b22" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b22" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b23" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b23" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b24" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b24" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b25" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b25" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b26" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b26" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b27" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b27" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b28" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b28" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b29" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b29" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b30" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b30" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b31" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b31" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
            </type>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="UINT64_VAL" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="UINT64_VAL" quals="[]" align="">
      <type class="Union" name="">
        <decls class="Decl" name="Val" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Val" quals="[]" align="">
            <type class="IdentifierType" names="['UINT64']"/>
          </type>
        </decls>
        <decls class="Decl" name="d" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="d" quals="[]" align="">
              <type class="IdentifierType" names="['UINT32']"/>
            </type>
            <dim class="Constant" type="int" value="2"/>
          </type>
        </decls>
        <decls class="Decl" name="w" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="w" quals="[]" align="">
              <type class="IdentifierType" names="['UINT16']"/>
            </type>
            <dim class="Constant" type="int" value="4"/>
          </type>
        </decls>
        <decls class="Decl" name="v" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="v" quals="[]" align="">
              <type class="IdentifierType" names="['UINT8']"/>
            </type>
            <dim class="Constant" type="int" value="8"/>
          </type>
        </decls>
        <decls class="Decl" name="dword" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="dword" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="LD" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="LD" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT32']"/>
                </type>
              </decls>
              <decls class="Decl" name="HD" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="HD" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT32']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="word" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="word" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="LW" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="LW" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT16']"/>
                </type>
              </decls>
              <decls class="Decl" name="HW" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="HW" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT16']"/>
                </type>
              </decls>
              <decls class="Decl" name="UW" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="UW" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT16']"/>
                </type>
              </decls>
              <decls class="Decl" name="MW" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="MW" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT16']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="bits" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="bits" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="b0" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b0" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b1" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b1" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b2" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b2" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b3" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b3" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b4" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b4" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b5" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b5" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b6" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b6" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b7" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b7" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b8" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b8" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b9" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b9" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b10" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b10" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b11" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b11" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b12" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b12" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b13" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b13" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b14" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b14" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b15" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b15" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b16" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b16" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b17" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b17" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b18" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b18" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b19" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b19" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b20" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b20" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b21" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b21" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b22" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b22" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b23" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b23" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b24" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b24" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b25" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b25" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b26" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b26" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b27" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b27" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b28" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b28" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b29" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b29" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b30" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b30" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b31" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b31" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b32" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b32" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b33" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b33" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b34" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b34" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b35" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b35" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b36" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b36" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b37" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b37" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b38" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b38" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b39" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b39" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b40" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b40" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b41" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b41" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b42" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b42" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b43" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b43" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b44" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b44" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b45" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b45" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b46" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b46" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b47" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b47" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b48" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b48" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b49" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b49" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b50" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b50" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b51" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b51" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b52" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b52" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b53" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b53" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b54" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b54" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b55" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b55" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b56" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b56" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b57" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b57" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b58" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b58" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b59" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b59" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b60" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b60" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b61" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b61" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b62" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b62" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b63" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b63" quals="[]" align="">
                  <type class="IdentifierType" names="['UINT8']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
            </type>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="VOID" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="VOID" quals="[]" align="">
      <type class="IdentifierType" names="['void']"/>
    </type>
  </ext>
  <ext class="Typedef" name="CHAR8" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="CHAR8" quals="[]" align="">
      <type class="IdentifierType" names="['char']"/>
    </type>
  </ext>
  <ext class="Typedef" name="UCHAR8" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="UCHAR8" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'char']"/>
    </type>
  </ext>
  <ext class="Typedef" name="BYTE" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="BYTE" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'char']"/>
    </type>
  </ext>
  <ext class="Typedef" name="WORD" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="WORD" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'short', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="DWORD" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="DWORD" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'long']"/>
    </type>
  </ext>
  <ext class="Typedef" name="QWORD" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="QWORD" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'long', 'long']"/>
    </type>
  </ext>
  <ext class="Typedef" name="CHAR" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="CHAR" quals="[]" align="">
      <type class="IdentifierType" names="['signed', 'char']"/>
    </type>
  </ext>
  <ext class="Typedef" name="SHORT" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="SHORT" quals="[]" align="">
      <type class="IdentifierType" names="['signed', 'short', 'int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="LONG" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="LONG" quals="[]" align="">
      <type class="IdentifierType" names="['signed', 'long']"/>
    </type>
  </ext>
  <ext class="Typedef" name="LONGLONG" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="LONGLONG" quals="[]" align="">
      <type class="IdentifierType" names="['signed', 'long', 'long']"/>
    </type>
  </ext>
  <ext class="Typedef" name="BYTE_VAL" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="BYTE_VAL" quals="[]" align="">
      <type class="Union" name="">
        <decls class="Decl" name="Val" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Val" quals="[]" align="">
            <type class="IdentifierType" names="['BYTE']"/>
          </type>
        </decls>
        <decls class="Decl" name="bits" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="bits" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="b0" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b0" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b1" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b1" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b2" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b2" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b3" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b3" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b4" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b4" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b5" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b5" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b6" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b6" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b7" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b7" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
            </type>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="BYTE_BITS" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="BYTE_BITS" quals="[]" align="">
      <type class="Union" name="">
        <decls class="Decl" name="Val" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Val" quals="[]" align="">
            <type class="IdentifierType" names="['BYTE']"/>
          </type>
        </decls>
        <decls class="Decl" name="bits" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="bits" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="b0" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b0" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b1" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b1" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b2" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b2" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b3" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b3" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b4" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b4" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b5" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b5" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b6" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b6" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b7" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b7" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
            </type>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="WORD_VAL" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="WORD_VAL" quals="[]" align="">
      <type class="Union" name="">
        <decls class="Decl" name="Val" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Val" quals="[]" align="">
            <type class="IdentifierType" names="['WORD']"/>
          </type>
        </decls>
        <decls class="Decl" name="v" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="v" quals="[]" align="">
              <type class="IdentifierType" names="['BYTE']"/>
            </type>
            <dim class="Constant" type="int" value="2"/>
          </type>
        </decls>
        <decls class="Decl" name="byte" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="byte" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="LB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="LB" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
              </decls>
              <decls class="Decl" name="HB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="HB" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="bits" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="bits" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="b0" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b0" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b1" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b1" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b2" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b2" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b3" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b3" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b4" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b4" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b5" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b5" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b6" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b6" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b7" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b7" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b8" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b8" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b9" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b9" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b10" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b10" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b11" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b11" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b12" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b12" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b13" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b13" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b14" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b14" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b15" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b15" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
            </type>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="WORD_BITS" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="WORD_BITS" quals="[]" align="">
      <type class="Union" name="">
        <decls class="Decl" name="Val" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Val" quals="[]" align="">
            <type class="IdentifierType" names="['WORD']"/>
          </type>
        </decls>
        <decls class="Decl" name="v" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="v" quals="[]" align="">
              <type class="IdentifierType" names="['BYTE']"/>
            </type>
            <dim class="Constant" type="int" value="2"/>
          </type>
        </decls>
        <decls class="Decl" name="byte" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="byte" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="LB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="LB" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
              </decls>
              <decls class="Decl" name="HB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="HB" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="bits" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="bits" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="b0" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b0" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b1" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b1" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b2" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b2" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b3" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b3" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b4" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b4" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b5" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b5" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b6" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b6" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b7" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b7" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b8" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b8" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b9" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b9" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b10" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b10" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b11" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b11" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b12" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b12" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b13" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b13" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b14" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b14" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b15" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b15" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
            </type>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="DWORD_VAL" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="DWORD_VAL" quals="[]" align="">
      <type class="Union" name="">
        <decls class="Decl" name="Val" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Val" quals="[]" align="">
            <type class="IdentifierType" names="['DWORD']"/>
          </type>
        </decls>
        <decls class="Decl" name="w" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="w" quals="[]" align="">
              <type class="IdentifierType" names="['WORD']"/>
            </type>
            <dim class="Constant" type="int" value="2"/>
          </type>
        </decls>
        <decls class="Decl" name="v" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="v" quals="[]" align="">
              <type class="IdentifierType" names="['BYTE']"/>
            </type>
            <dim class="Constant" type="int" value="4"/>
          </type>
        </decls>
        <decls class="Decl" name="word" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="word" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="LW" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="LW" quals="[]" align="">
                  <type class="IdentifierType" names="['WORD']"/>
                </type>
              </decls>
              <decls class="Decl" name="HW" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="HW" quals="[]" align="">
                  <type class="IdentifierType" names="['WORD']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="byte" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="byte" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="LB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="LB" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
              </decls>
              <decls class="Decl" name="HB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="HB" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
              </decls>
              <decls class="Decl" name="UB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="UB" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
              </decls>
              <decls class="Decl" name="MB" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="MB" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="wordUnion" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="wordUnion" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="low" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="low" quals="[]" align="">
                  <type class="IdentifierType" names="['WORD_VAL']"/>
                </type>
              </decls>
              <decls class="Decl" name="high" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="high" quals="[]" align="">
                  <type class="IdentifierType" names="['WORD_VAL']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="bits" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="bits" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="b0" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b0" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b1" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b1" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b2" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b2" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b3" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b3" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b4" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b4" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b5" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b5" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b6" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b6" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b7" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b7" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b8" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b8" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b9" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b9" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b10" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b10" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b11" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b11" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b12" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b12" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b13" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b13" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b14" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b14" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b15" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b15" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b16" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b16" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b17" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b17" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b18" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b18" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b19" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b19" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b20" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b20" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b21" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b21" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b22" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b22" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b23" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b23" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b24" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b24" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b25" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b25" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b26" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b26" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b27" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b27" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b28" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b28" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b29" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b29" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b30" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b30" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b31" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b31" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
            </type>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="QWORD_VAL" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="QWORD_VAL" quals="[]" align="">
      <type class="Union" name="">
        <decls class="Decl" name="Val" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Val" quals="[]" align="">
            <type class="IdentifierType" names="['QWORD']"/>
          </type>
        </decls>
        <decls class="Decl" name="d" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="d" quals="[]" align="">
              <type class="IdentifierType" names="['DWORD']"/>
            </type>
            <dim class="Constant" type="int" value="2"/>
          </type>
        </decls>
        <decls class="Decl" name="w" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="w" quals="[]" align="">
              <type class="IdentifierType" names="['WORD']"/>
            </type>
            <dim class="Constant" type="int" value="4"/>
          </type>
        </decls>
        <decls class="Decl" name="v" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="v" quals="[]" align="">
              <type class="IdentifierType" names="['BYTE']"/>
            </type>
            <dim class="Constant" type="int" value="8"/>
          </type>
        </decls>
        <decls class="Decl" name="dword" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="dword" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="LD" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="LD" quals="[]" align="">
                  <type class="IdentifierType" names="['DWORD']"/>
                </type>
              </decls>
              <decls class="Decl" name="HD" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="HD" quals="[]" align="">
                  <type class="IdentifierType" names="['DWORD']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="word" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="word" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="LW" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="LW" quals="[]" align="">
                  <type class="IdentifierType" names="['WORD']"/>
                </type>
              </decls>
              <decls class="Decl" name="HW" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="HW" quals="[]" align="">
                  <type class="IdentifierType" names="['WORD']"/>
                </type>
              </decls>
              <decls class="Decl" name="UW" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="UW" quals="[]" align="">
                  <type class="IdentifierType" names="['WORD']"/>
                </type>
              </decls>
              <decls class="Decl" name="MW" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="MW" quals="[]" align="">
                  <type class="IdentifierType" names="['WORD']"/>
                </type>
              </decls>
            </type>
          </type>
        </decls>
        <decls class="Decl" name="bits" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="bits" quals="[]" align="">
            <type class="Struct" name="">
              <decls class="Decl" name="b0" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b0" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b1" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b1" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b2" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b2" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b3" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b3" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b4" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b4" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b5" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b5" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b6" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b6" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b7" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b7" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b8" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b8" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b9" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b9" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b10" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b10" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b11" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b11" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b12" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b12" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b13" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b13" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b14" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b14" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b15" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b15" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b16" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b16" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b17" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b17" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b18" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b18" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b19" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b19" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b20" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b20" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b21" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b21" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b22" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b22" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b23" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b23" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b24" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b24" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b25" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b25" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b26" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b26" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b27" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b27" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b28" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b28" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b29" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b29" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b30" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b30" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b31" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b31" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b32" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b32" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b33" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b33" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b34" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b34" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b35" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b35" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b36" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b36" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b37" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b37" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b38" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b38" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b39" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b39" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b40" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b40" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b41" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b41" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b42" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b42" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b43" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b43" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b44" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b44" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b45" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b45" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b46" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b46" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b47" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b47" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b48" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b48" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b49" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b49" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b50" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b50" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b51" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b51" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b52" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b52" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b53" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b53" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b54" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b54" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b55" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b55" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b56" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b56" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b57" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b57" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b58" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b58" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b59" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b59" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b60" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b60" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b61" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b61" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b62" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b62" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
              <decls class="Decl" name="b63" quals="[]" align="[]" storage="[]" funcspec="[]">
                <type class="TypeDecl" declname="b63" quals="[]" align="">
                  <type class="IdentifierType" names="['BYTE']"/>
                </type>
                <bitsize class="Constant" type="int" value="1"/>
              </decls>
            </type>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="BOARD_Init" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <type class="TypeDecl" declname="BOARD_Init" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="BOARD_End" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <type class="TypeDecl" declname="BOARD_End" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="BOARD_GetPBClock" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <type class="TypeDecl" declname="BOARD_GetPBClock" quals="[]" align="">
        <type class="IdentifierType" names="['unsigned', 'int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_Init" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_Init" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_LeftMtrSpeed" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="newSpeed" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="newSpeed" quals="[]" align="">
            <type class="IdentifierType" names="['char']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_LeftMtrSpeed" quals="[]" align="">
        <type class="IdentifierType" names="['char']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_RightMtrSpeed" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="newSpeed" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="newSpeed" quals="[]" align="">
            <type class="IdentifierType" names="['char']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_RightMtrSpeed" quals="[]" align="">
        <type class="IdentifierType" names="['char']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_LightLevel" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_LightLevel" quals="[]" align="">
        <type class="IdentifierType" names="['unsigned', 'int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_BatteryVoltage" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_BatteryVoltage" quals="[]" align="">
        <type class="IdentifierType" names="['unsigned', 'int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_ReadFrontLeftBumper" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_ReadFrontLeftBumper" quals="[]" align="">
        <type class="IdentifierType" names="['unsigned', 'char']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_ReadFrontRightBumper" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_ReadFrontRightBumper" quals="[]" align="">
        <type class="IdentifierType" names="['unsigned', 'char']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_ReadRearLeftBumper" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_ReadRearLeftBumper" quals="[]" align="">
        <type class="IdentifierType" names="['unsigned', 'char']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_ReadRearRightBumper" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_ReadRearRightBumper" quals="[]" align="">
        <type class="IdentifierType" names="['unsigned', 'char']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_ReadBumpers" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_ReadBumpers" quals="[]" align="">
        <type class="IdentifierType" names="['unsigned', 'char']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_LEDSSet" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="pattern" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="pattern" quals="[]" align="">
            <type class="IdentifierType" names="['uint16_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_LEDSSet" quals="[]" align="">
        <type class="IdentifierType" names="['char']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_LEDSGet" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_LEDSGet" quals="[]" align="">
        <type class="IdentifierType" names="['uint16_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="Roach_BarGraph" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="Number" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="Number" quals="[]" align="">
            <type class="IdentifierType" names="['uint8_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="Roach_BarGraph" quals="[]" align="">
        <type class="IdentifierType" names="['char']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="TemplateCheckBattery" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="TemplateCheckBattery" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="TestIfDark" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="TestIfDark" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="TestIfLight" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="TestIfLight" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="TestBumpers" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="TestBumpers" quals="[]" align="">
        <type class="IdentifierType" names="['uint8_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Typedef" name="_Double" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="_Double" quals="[]" align="">
      <type class="IdentifierType" names="['double']"/>
    </type>
  </ext>
  <ext class="Typedef" name="ssize_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="ssize_t" quals="[]" align="">
      <type class="IdentifierType" names="['int']"/>
    </type>
  </ext>
  <ext class="Typedef" name="off_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="off_t" quals="[]" align="">
      <type class="IdentifierType" names="['long', 'long']"/>
    </type>
  </ext>
  <ext class="Typedef" name="FILE" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="FILE" quals="[]" align="">
      <type class="Struct" name="_IO_FILE"/>
    </type>
  </ext>
  <ext class="Typedef" name="fpos_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="fpos_t" quals="[]" align="">
      <type class="Union" name="_G_fpos64_t">
        <decls class="Decl" name="__opaque" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="ArrayDecl" dim_quals="[]">
            <type class="TypeDecl" declname="__opaque" quals="[]" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
            <dim class="Constant" type="int" value="16"/>
          </type>
        </decls>
        <decls class="Decl" name="__align" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="TypeDecl" declname="__align" quals="[]" align="">
            <type class="IdentifierType" names="['double']"/>
          </type>
        </decls>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fopen" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="PtrDecl" quals="[]">
        <type class="TypeDecl" declname="fopen" quals="[]" align="">
          <type class="IdentifierType" names="['FILE']"/>
        </type>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="freopen" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="PtrDecl" quals="[]">
        <type class="TypeDecl" declname="freopen" quals="[]" align="">
          <type class="IdentifierType" names="['FILE']"/>
        </type>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fclose" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fclose" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="remove" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="remove" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="rename" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="rename" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="feof" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="feof" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ferror" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ferror" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fflush" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fflush" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="clearerr" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="clearerr" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fseek" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['long']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fseek" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ftell" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ftell" quals="[]" align="">
        <type class="IdentifierType" names="['long']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="rewind" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="rewind" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fgetpos" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['fpos_t']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fgetpos" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fsetpos" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['fpos_t']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fsetpos" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fread" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['void']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['size_t']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['size_t']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fread" quals="[]" align="">
        <type class="IdentifierType" names="['size_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fwrite" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['void']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['size_t']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['size_t']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fwrite" quals="[]" align="">
        <type class="IdentifierType" names="['size_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fgetc" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fgetc" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="getc" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="getc" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="getchar" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="getchar" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ungetc" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ungetc" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fputc" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fputc" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="putc" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="putc" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="putchar" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="putchar" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fgets" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="PtrDecl" quals="[]">
        <type class="TypeDecl" declname="fgets" quals="[]" align="">
          <type class="IdentifierType" names="['char']"/>
        </type>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fputs" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fputs" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="puts" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="puts" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="printf" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="EllipsisParam"/>
      </args>
      <type class="TypeDecl" declname="printf" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fprintf" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="EllipsisParam"/>
      </args>
      <type class="TypeDecl" declname="fprintf" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="sprintf" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="EllipsisParam"/>
      </args>
      <type class="TypeDecl" declname="sprintf" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="snprintf" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['size_t']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="EllipsisParam"/>
      </args>
      <type class="TypeDecl" declname="snprintf" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="scanf" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="EllipsisParam"/>
      </args>
      <type class="TypeDecl" declname="scanf" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fscanf" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="EllipsisParam"/>
      </args>
      <type class="TypeDecl" declname="fscanf" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="sscanf" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="EllipsisParam"/>
      </args>
      <type class="TypeDecl" declname="sscanf" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="perror" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="perror" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="setvbuf" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['size_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="setvbuf" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="setbuf" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="setbuf" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="tmpnam" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="PtrDecl" quals="[]">
        <type class="TypeDecl" declname="tmpnam" quals="[]" align="">
          <type class="IdentifierType" names="['char']"/>
        </type>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="tmpfile" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="PtrDecl" quals="[]">
        <type class="TypeDecl" declname="tmpfile" quals="[]" align="">
          <type class="IdentifierType" names="['FILE']"/>
        </type>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fmemopen" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['void']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['size_t']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="['restrict']">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="PtrDecl" quals="[]">
        <type class="TypeDecl" declname="fmemopen" quals="[]" align="">
          <type class="IdentifierType" names="['FILE']"/>
        </type>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fdopen" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="PtrDecl" quals="[]">
        <type class="TypeDecl" declname="fdopen" quals="[]" align="">
          <type class="IdentifierType" names="['FILE']"/>
        </type>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fileno" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fileno" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fseeko" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['off_t']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fseeko" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ftello" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ftello" quals="[]" align="">
        <type class="IdentifierType" names="['off_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="getc_unlocked" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="getc_unlocked" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="getchar_unlocked" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['void']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="getchar_unlocked" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="putc_unlocked" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="putc_unlocked" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="putchar_unlocked" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="putchar_unlocked" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="tempnam" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="PtrDecl" quals="[]">
        <type class="TypeDecl" declname="tempnam" quals="[]" align="">
          <type class="IdentifierType" names="['char']"/>
        </type>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="setbuffer" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['size_t']"/>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="setbuffer" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="setlinebuf" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Decl" name="f" quals="[]" align="[]" storage="[]" funcspec="[]">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="f" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="setlinebuf" quals="[]" align="">
        <type class="IdentifierType" names="['void']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fgetc_unlocked" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fgetc_unlocked" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fputc_unlocked" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['int']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fputc_unlocked" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fflush_unlocked" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fflush_unlocked" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fread_unlocked" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['void']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['size_t']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['size_t']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fread_unlocked" quals="[]" align="">
        <type class="IdentifierType" names="['size_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fwrite_unlocked" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['void']"/>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['size_t']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="TypeDecl" declname="" quals="[]" align="">
            <type class="IdentifierType" names="['size_t']"/>
          </type>
        </params>
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fwrite_unlocked" quals="[]" align="">
        <type class="IdentifierType" names="['size_t']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="feof_unlocked" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="feof_unlocked" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="ferror_unlocked" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="ferror_unlocked" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="fileno_unlocked" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="[]" align="">
              <type class="IdentifierType" names="['FILE']"/>
            </type>
          </type>
        </params>
      </args>
      <type class="TypeDecl" declname="fileno_unlocked" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="asprintf" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="FuncDecl">
      <args class="ParamList">
        <params class="Typename" name="" quals="[]" align="">
          <type class="PtrDecl" quals="[]">
            <type class="PtrDecl" quals="[]">
              <type class="TypeDecl" declname="" quals="[]" align="">
                <type class="IdentifierType" names="['char']"/>
              </type>
            </type>
          </type>
        </params>
        <params class="Typename" name="" quals="['const']" align="">
          <type class="PtrDecl" quals="[]">
            <type class="TypeDecl" declname="" quals="['const']" align="">
              <type class="IdentifierType" names="['char']"/>
            </type>
          </type>
        </params>
        <params class="EllipsisParam"/>
      </args>
      <type class="TypeDecl" declname="asprintf" quals="[]" align="">
        <type class="IdentifierType" names="['int']"/>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="previousBumpers" quals="[]" align="[]" storage="[]" funcspec="[]">
    <type class="TypeDecl" declname="previousBumpers" quals="[]" align="">
      <type class="IdentifierType" names="['unsigned', 'char']"/>
    </type>
    <init class="Constant" type="int" value="0"/>
  </ext>
  <ext class="FuncDef">
    <decl class="Decl" name="goForward" quals="[]" align="[]" storage="[]" funcspec="[]">
      <type class="FuncDecl">
        <args class="ParamList">
          <params class="Decl" name="speed" quals="[]" align="[]" storage="[]" funcspec="[]">
            <type class="TypeDecl" declname="speed" quals="[]" align="">
              <type class="IdentifierType" names="['int']"/>
            </type>
          </params>
        </args>
        <type class="TypeDecl" declname="goForward" quals="[]" align="">
          <type class="IdentifierType" names="['void']"/>
        </type>
      </type>
    </decl>
    <body class="Compound">
      <block_items class="FuncCall">
        <name class="ID" name="Roach_RightMtrSpeed"/>
        <args class="ExprList">
          <exprs class="ID" name="speed"/>
        </args>
      </block_items>
      <block_items class="FuncCall">
        <name class="ID" name="Roach_LeftMtrSpeed"/>
        <args class="ExprList">
          <exprs class="ID" name="speed"/>
        </args>
      </block_items>
    </body>
  </ext>
  <ext class="FuncDef">
    <decl class="Decl" name="stopMovement" quals="[]" align="[]" storage="[]" funcspec="[]">
      <type class="FuncDecl">
        <type class="TypeDecl" declname="stopMovement" quals="[]" align="">
          <type class="IdentifierType" names="['void']"/>
        </type>
      </type>
    </decl>
    <body class="Compound">
      <block_items class="FuncCall">
        <name class="ID" name="Roach_RightMtrSpeed"/>
        <args class="ExprList">
          <exprs class="Constant" type="int" value="0"/>
        </args>
      </block_items>
      <block_items class="FuncCall">
        <name class="ID" name="Roach_LeftMtrSpeed"/>
        <args class="ExprList">
          <exprs class="Constant" type="int" value="0"/>
        </args>
      </block_items>
    </body>
  </ext>
  <ext class="FuncDef">
    <decl class="Decl" name="backUpRight" quals="[]" align="[]" storage="[]" funcspec="[]">
      <type class="FuncDecl">
        <args class="ParamList">
          <params class="Decl" name="speed" quals="[]" align="[]" storage="[]" funcspec="[]">
            <type class="TypeDecl" declname="speed" quals="[]" align="">
              <type class="IdentifierType" names="['int']"/>
            </type>
          </params>
        </args>
        <type class="TypeDecl" declname="backUpRight" quals="[]" align="">
          <type class="IdentifierType" names="['void']"/>
        </type>
      </type>
    </decl>
    <body class="Compound">
      <block_items class="FuncCall">
        <name class="ID" name="Roach_RightMtrSpeed"/>
        <args class="ExprList">
          <exprs class="BinaryOp" op="*">
            <left class="UnaryOp" op="-">
              <expr class="Constant" type="int" value="1"/>
            </left>
            <right class="BinaryOp" op="-">
              <left class="ID" name="speed"/>
              <right class="Constant" type="int" value="20"/>
            </right>
          </exprs>
        </args>
      </block_items>
      <block_items class="FuncCall">
        <name class="ID" name="Roach_LeftMtrSpeed"/>
        <args class="ExprList">
          <exprs class="BinaryOp" op="*">
            <left class="UnaryOp" op="-">
              <expr class="Constant" type="int" value="1"/>
            </left>
            <right class="ID" name="speed"/>
          </exprs>
        </args>
      </block_items>
    </body>
  </ext>
  <ext class="FuncDef">
    <decl class="Decl" name="backUpLeft" quals="[]" align="[]" storage="[]" funcspec="[]">
      <type class="FuncDecl">
        <args class="ParamList">
          <params class="Decl" name="speed" quals="[]" align="[]" storage="[]" funcspec="[]">
            <type class="TypeDecl" declname="speed" quals="[]" align="">
              <type class="IdentifierType" names="['int']"/>
            </type>
          </params>
        </args>
        <type class="TypeDecl" declname="backUpLeft" quals="[]" align="">
          <type class="IdentifierType" names="['void']"/>
        </type>
      </type>
    </decl>
    <body class="Compound">
      <block_items class="FuncCall">
        <name class="ID" name="Roach_RightMtrSpeed"/>
        <args class="ExprList">
          <exprs class="BinaryOp" op="*">
            <left class="UnaryOp" op="-">
              <expr class="Constant" type="int" value="1"/>
            </left>
            <right class="ID" name="speed"/>
          </exprs>
        </args>
      </block_items>
      <block_items class="FuncCall">
        <name class="ID" name="Roach_LeftMtrSpeed"/>
        <args class="ExprList">
          <exprs class="BinaryOp" op="*">
            <left class="UnaryOp" op="-">
              <expr class="Constant" type="int" value="1"/>
            </left>
            <right class="BinaryOp" op="-">
              <left class="ID" name="speed"/>
              <right class="Constant" type="int" value="20"/>
            </right>
          </exprs>
        </args>
      </block_items>
    </body>
  </ext>
  <ext class="FuncDef">
    <decl class="Decl" name="turnRight" quals="[]" align="[]" storage="[]" funcspec="[]">
      <type class="FuncDecl">
        <args class="ParamList">
          <params class="Decl" name="speed" quals="[]" align="[]" storage="[]" funcspec="[]">
            <type class="TypeDecl" declname="speed" quals="[]" align="">
              <type class="IdentifierType" names="['int']"/>
            </type>
          </params>
        </args>
        <type class="TypeDecl" declname="turnRight" quals="[]" align="">
          <type class="IdentifierType" names="['void']"/>
        </type>
      </type>
    </decl>
    <body class="Compound">
      <block_items class="FuncCall">
        <name class="ID" name="Roach_RightMtrSpeed"/>
        <args class="ExprList">
          <exprs class="BinaryOp" op="-">
            <left class="ID" name="speed"/>
            <right class="Constant" type="int" value="20"/>
          </exprs>
        </args>
      </block_items>
      <block_items class="FuncCall">
        <name class="ID" name="Roach_LeftMtrSpeed"/>
        <args class="ExprList">
          <exprs class="ID" name="speed"/>
        </args>
      </block_items>
    </body>
  </ext>
  <ext class="FuncDef">
    <decl class="Decl" name="turnLeft" quals="[]" align="[]" storage="[]" funcspec="[]">
      <type class="FuncDecl">
        <args class="ParamList">
          <params class="Decl" name="speed" quals="[]" align="[]" storage="[]" funcspec="[]">
            <type class="TypeDecl" declname="speed" quals="[]" align="">
              <type class="IdentifierType" names="['int']"/>
            </type>
          </params>
        </args>
        <type class="TypeDecl" declname="turnLeft" quals="[]" align="">
          <type class="IdentifierType" names="['void']"/>
        </type>
      </type>
    </decl>
    <body class="Compound">
      <block_items class="FuncCall">
        <name class="ID" name="Roach_RightMtrSpeed"/>
        <args class="ExprList">
          <exprs class="ID" name="speed"/>
        </args>
      </block_items>
      <block_items class="FuncCall">
        <name class="ID" name="Roach_LeftMtrSpeed"/>
        <args class="ExprList">
          <exprs class="BinaryOp" op="-">
            <left class="ID" name="speed"/>
            <right class="Constant" type="int" value="20"/>
          </exprs>
        </args>
      </block_items>
    </body>
  </ext>
  <ext class="Typedef" name="TemplateFSMState_t" quals="[]" storage="['typedef']">
    <type class="TypeDecl" declname="TemplateFSMState_t" quals="[]" align="">
      <type class="Enum" name="">
        <values class="EnumeratorList">
          <enumerators class="Enumerator" name="InitPState"/>
          <enumerators class="Enumerator" name="Hiding"/>
          <enumerators class="Enumerator" name="Moving"/>
          <enumerators class="Enumerator" name="Getting_Unstuck"/>
        </values>
      </type>
    </type>
  </ext>
  <ext class="Decl" name="StateNames" quals="['const']" align="[]" storage="['static']" funcspec="[]">
    <type class="ArrayDecl" dim_quals="[]">
      <type class="PtrDecl" quals="[]">
        <type class="TypeDecl" declname="StateNames" quals="['const']" align="">
          <type class="IdentifierType" names="['char']"/>
        </type>
      </type>
    </type>
    <init class="InitList">
      <exprs class="Constant" type="string" value="&quot;InitPState&quot;"/>
      <exprs class="Constant" type="string" value="&quot;Hiding&quot;"/>
      <exprs class="Constant" type="string" value="&quot;Moving&quot;"/>
      <exprs class="Constant" type="string" value="&quot;Getting_Unstuck&quot;"/>
    </init>
  </ext>
  <ext class="Decl" name="CurrentState" quals="[]" align="[]" storage="['static']" funcspec="[]">
    <type class="TypeDecl" declname="CurrentState" quals="[]" align="">
      <type class="IdentifierType" names="['TemplateFSMState_t']"/>
    </type>
    <init class="ID" name="InitPState"/>
  </ext>
  <ext class="Decl" name="MyPriority" quals="[]" align="[]" storage="['static']" funcspec="[]">
    <type class="TypeDecl" declname="MyPriority" quals="[]" align="">
      <type class="IdentifierType" names="['uint8_t']"/>
    </type>
  </ext>
  <ext class="FuncDef">
    <decl class="Decl" name="InitTemplateFSM" quals="[]" align="[]" storage="[]" funcspec="[]">
      <type class="FuncDecl">
        <args class="ParamList">
          <params class="Decl" name="Priority" quals="[]" align="[]" storage="[]" funcspec="[]">
            <type class="TypeDecl" declname="Priority" quals="[]" align="">
              <type class="IdentifierType" names="['uint8_t']"/>
            </type>
          </params>
        </args>
        <type class="TypeDecl" declname="InitTemplateFSM" quals="[]" align="">
          <type class="IdentifierType" names="['uint8_t']"/>
        </type>
      </type>
    </decl>
    <body class="Compound">
      <block_items class="Assignment" op="=">
        <lvalue class="ID" name="MyPriority"/>
        <rvalue class="ID" name="Priority"/>
      </block_items>
      <block_items class="Assignment" op="=">
        <lvalue class="ID" name="CurrentState"/>
        <rvalue class="ID" name="InitPState"/>
      </block_items>
      <block_items class="If">
        <cond class="BinaryOp" op="==">
          <left class="FuncCall">
            <name class="ID" name="ES_PostToService"/>
            <args class="ExprList">
              <exprs class="ID" name="MyPriority"/>
              <exprs class="CompoundLiteral">
                <type class="Typename" name="" quals="[]" align="">
                  <type class="TypeDecl" declname="" quals="[]" align="">
                    <type class="IdentifierType" names="['ES_Event']"/>
                  </type>
                </type>
                <init class="InitList">
                  <exprs class="ID" name="ES_INIT"/>
                  <exprs class="Constant" type="int" value="0x0000"/>
                </init>
              </exprs>
            </args>
          </left>
          <right class="ID" name="TRUE"/>
        </cond>
        <iftrue class="Compound">
          <block_items class="Return">
            <expr class="ID" name="TRUE"/>
          </block_items>
        </iftrue>
        <iffalse class="Compound">
          <block_items class="Return">
            <expr class="ID" name="FALSE"/>
          </block_items>
        </iffalse>
      </block_items>
    </body>
  </ext>
  <ext class="FuncDef">
    <decl class="Decl" name="PostTemplateFSM" quals="[]" align="[]" storage="[]" funcspec="[]">
      <type class="FuncDecl">
        <args class="ParamList">
          <params class="Decl" name="ThisEvent" quals="[]" align="[]" storage="[]" funcspec="[]">
            <type class="TypeDecl" declname="ThisEvent" quals="[]" align="">
              <type class="IdentifierType" names="['ES_Event']"/>
            </type>
          </params>
        </args>
        <type class="TypeDecl" declname="PostTemplateFSM" quals="[]" align="">
          <type class="IdentifierType" names="['uint8_t']"/>
        </type>
      </type>
    </decl>
    <body class="Compound">
      <block_items class="Return">
        <expr class="FuncCall">
          <name class="ID" name="ES_PostToService"/>
          <args class="ExprList">
            <exprs class="ID" name="MyPriority"/>
            <exprs class="ID" name="ThisEvent"/>
          </args>
        </expr>
      </block_items>
    </body>
  </ext>
  <ext class="FuncDef">
    <decl class="Decl" name="RunTemplateFSM" quals="[]" align="[]" storage="[]" funcspec="[]">
      <type class="FuncDecl">
        <args class="ParamList">
          <params class="Decl" name="ThisEvent" quals="[]" align="[]" storage="[]" funcspec="[]">
            <type class="TypeDecl" declname="ThisEvent" quals="[]" align="">
              <type class="IdentifierType" names="['ES_Event']"/>
            </type>
          </params>
        </args>
        <type class="TypeDecl" declname="RunTemplateFSM" quals="[]" align="">
          <type class="IdentifierType" names="['ES_Event']"/>
        </type>
      </type>
    </decl>
    <body class="Compound">
      <block_items class="Decl" name="makeTransition" quals="[]" align="[]" storage="[]" funcspec="[]">
        <type class="TypeDecl" declname="makeTransition" quals="[]" align="">
          <type class="IdentifierType" names="['uint8_t']"/>
        </type>
        <init class="ID" name="FALSE"/>
      </block_items>
      <block_items class="Decl" name="nextState" quals="[]" align="[]" storage="[]" funcspec="[]">
        <type class="TypeDecl" declname="nextState" quals="[]" align="">
          <type class="IdentifierType" names="['TemplateFSMState_t']"/>
        </type>
      </block_items>
      <block_items class="FuncCall">
        <name class="ID" name="ES_AddTattlePoint"/>
        <args class="ExprList">
          <exprs class="ID" name="__FUNCTION__"/>
          <exprs class="ArrayRef">
            <name class="ID" name="StateNames"/>
            <subscript class="ID" name="CurrentState"/>
          </exprs>
          <exprs class="ID" name="ThisEvent"/>
        </args>
      </block_items>
      <block_items class="Switch">
        <cond class="ID" name="CurrentState"/>
        <stmt class="Compound">
          <block_items class="Case">
            <expr class="ID" name="InitPState"/>
            <stmts class="If">
              <cond class="BinaryOp" op="==">
                <left class="StructRef" type=".">
                  <name class="ID" name="ThisEvent"/>
                  <field class="ID" name="EventType"/>
                </left>
                <right class="ID" name="ES_INIT"/>
              </cond>
              <iftrue class="Compound">
                <block_items class="Assignment" op="=">
                  <lvalue class="ID" name="nextState"/>
                  <rvalue class="ID" name="Hiding"/>
                </block_items>
                <block_items class="Assignment" op="=">
                  <lvalue class="ID" name="makeTransition"/>
                  <rvalue class="ID" name="TRUE"/>
                </block_items>
                <block_items class="Assignment" op="=">
                  <lvalue class="StructRef" type=".">
                    <name class="ID" name="ThisEvent"/>
                    <field class="ID" name="EventType"/>
                  </lvalue>
                  <rvalue class="ID" name="ES_NO_EVENT"/>
                </block_items>
              </iftrue>
            </stmts>
            <stmts class="Break"/>
          </block_items>
          <block_items class="Case">
            <expr class="ID" name="Hiding"/>
            <stmts class="Switch">
              <cond class="StructRef" type=".">
                <name class="ID" name="ThisEvent"/>
                <field class="ID" name="EventType"/>
              </cond>
              <stmt class="Compound">
                <block_items class="Case">
                  <expr class="ID" name="ES_ENTRY"/>
                  <stmts class="Break"/>
                </block_items>
                <block_items class="Case">
                  <expr class="ID" name="ES_EXIT"/>
                  <stmts class="Break"/>
                </block_items>
                <block_items class="Case">
                  <expr class="ID" name="DARK_TO_LIGHT"/>
                  <stmts class="FuncCall">
                    <name class="ID" name="goForward"/>
                    <args class="ExprList">
                      <exprs class="Constant" type="int" value="100"/>
                    </args>
                  </stmts>
                  <stmts class="Assignment" op="=">
                    <lvalue class="ID" name="nextState"/>
                    <rvalue class="ID" name="Moving"/>
                  </stmts>
                  <stmts class="Assignment" op="=">
                    <lvalue class="ID" name="makeTransition"/>
                    <rvalue class="ID" name="TRUE"/>
                  </stmts>
                  <stmts class="Assignment" op="=">
                    <lvalue class="StructRef" type=".">
                      <name class="ID" name="ThisEvent"/>
                      <field class="ID" name="EventType"/>
                    </lvalue>
                    <rvalue class="ID" name="ES_NO_EVENT"/>
                  </stmts>
                  <stmts class="Break"/>
                </block_items>
                <block_items class="Default">
                  <stmts class="Break"/>
                </block_items>
              </stmt>
            </stmts>
            <stmts class="Break"/>
          </block_items>
          <block_items class="Case">
            <expr class="ID" name="Moving"/>
            <stmts class="If">
              <cond class="BinaryOp" op="==">
                <left class="StructRef" type=".">
                  <name class="ID" name="ThisEvent"/>
                  <field class="ID" name="EventType"/>
                </left>
                <right class="ID" name="LIGHT_TO_DARK"/>
              </cond>
              <iftrue class="Compound">
                <block_items class="FuncCall">
                  <name class="ID" name="stopMovement"/>
                </block_items>
                <block_items class="Assignment" op="=">
                  <lvalue class="ID" name="nextState"/>
                  <rvalue class="ID" name="Hiding"/>
                </block_items>
                <block_items class="Assignment" op="=">
                  <lvalue class="ID" name="makeTransition"/>
                  <rvalue class="ID" name="TRUE"/>
                </block_items>
                <block_items class="Assignment" op="=">
                  <lvalue class="StructRef" type=".">
                    <name class="ID" name="ThisEvent"/>
                    <field class="ID" name="EventType"/>
                  </lvalue>
                  <rvalue class="ID" name="ES_NO_EVENT"/>
                </block_items>
              </iftrue>
            </stmts>
            <stmts class="If">
              <cond class="BinaryOp" op="==">
                <left class="StructRef" type=".">
                  <name class="ID" name="ThisEvent"/>
                  <field class="ID" name="EventType"/>
                </left>
                <right class="ID" name="BUMPER_PRESSED"/>
              </cond>
              <iftrue class="Compound">
                <block_items class="If">
                  <cond class="BinaryOp" op="==">
                    <left class="StructRef" type=".">
                      <name class="ID" name="ThisEvent"/>
                      <field class="ID" name="EventParam"/>
                    </left>
                    <right class="Constant" type="int" value="1"/>
                  </cond>
                  <iftrue class="Compound">
                    <block_items class="Assignment" op="=">
                      <lvalue class="ID" name="previousBumpers"/>
                      <rvalue class="Constant" type="int" value="1"/>
                    </block_items>
                    <block_items class="FuncCall">
                      <name class="ID" name="backUpRight"/>
                      <args class="ExprList">
                        <exprs class="Constant" type="int" value="90"/>
                      </args>
                    </block_items>
                    <block_items class="FuncCall">
                      <name class="ID" name="ES_Timer_InitTimer"/>
                      <args class="ExprList">
                        <exprs class="Constant" type="int" value="0"/>
                        <exprs class="Constant" type="int" value="3000"/>
                      </args>
                    </block_items>
                    <block_items class="Assignment" op="=">
                      <lvalue class="ID" name="nextState"/>
                      <rvalue class="ID" name="Getting_Unstuck"/>
                    </block_items>
                    <block_items class="Assignment" op="=">
                      <lvalue class="ID" name="makeTransition"/>
                      <rvalue class="ID" name="TRUE"/>
                    </block_items>
                    <block_items class="Assignment" op="=">
                      <lvalue class="StructRef" type=".">
                        <name class="ID" name="ThisEvent"/>
                        <field class="ID" name="EventType"/>
                      </lvalue>
                      <rvalue class="ID" name="ES_NO_EVENT"/>
                    </block_items>
                  </iftrue>
                  <iffalse class="If">
                    <cond class="BinaryOp" op="==">
                      <left class="StructRef" type=".">
                        <name class="ID" name="ThisEvent"/>
                        <field class="ID" name="EventParam"/>
                      </left>
                      <right class="Constant" type="int" value="2"/>
                    </cond>
                    <iftrue class="Compound">
                      <block_items class="Assignment" op="=">
                        <lvalue class="ID" name="previousBumpers"/>
                        <rvalue class="Constant" type="int" value="2"/>
                      </block_items>
                      <block_items class="FuncCall">
                        <name class="ID" name="backUpLeft"/>
                        <args class="ExprList">
                          <exprs class="Constant" type="int" value="90"/>
                        </args>
                      </block_items>
                      <block_items class="FuncCall">
                        <name class="ID" name="ES_Timer_InitTimer"/>
                        <args class="ExprList">
                          <exprs class="Constant" type="int" value="0"/>
                          <exprs class="Constant" type="int" value="3000"/>
                        </args>
                      </block_items>
                      <block_items class="Assignment" op="=">
                        <lvalue class="ID" name="nextState"/>
                        <rvalue class="ID" name="Getting_Unstuck"/>
                      </block_items>
                      <block_items class="Assignment" op="=">
                        <lvalue class="ID" name="makeTransition"/>
                        <rvalue class="ID" name="TRUE"/>
                      </block_items>
                      <block_items class="Assignment" op="=">
                        <lvalue class="StructRef" type=".">
                          <name class="ID" name="ThisEvent"/>
                          <field class="ID" name="EventType"/>
                        </lvalue>
                        <rvalue class="ID" name="ES_NO_EVENT"/>
                      </block_items>
                    </iftrue>
                    <iffalse class="If">
                      <cond class="BinaryOp" op="==">
                        <left class="StructRef" type=".">
                          <name class="ID" name="ThisEvent"/>
                          <field class="ID" name="EventParam"/>
                        </left>
                        <right class="Constant" type="int" value="4"/>
                      </cond>
                      <iftrue class="Compound">
                        <block_items class="FuncCall">
                          <name class="ID" name="turnLeft"/>
                          <args class="ExprList">
                            <exprs class="Constant" type="int" value="90"/>
                          </args>
                        </block_items>
                        <block_items class="FuncCall">
                          <name class="ID" name="ES_Timer_InitTimer"/>
                          <args class="ExprList">
                            <exprs class="Constant" type="int" value="0"/>
                            <exprs class="Constant" type="int" value="3000"/>
                          </args>
                        </block_items>
                        <block_items class="Assignment" op="=">
                          <lvalue class="ID" name="nextState"/>
                          <rvalue class="ID" name="Getting_Unstuck"/>
                        </block_items>
                        <block_items class="Assignment" op="=">
                          <lvalue class="ID" name="makeTransition"/>
                          <rvalue class="ID" name="TRUE"/>
                        </block_items>
                        <block_items class="Assignment" op="=">
                          <lvalue class="StructRef" type=".">
                            <name class="ID" name="ThisEvent"/>
                            <field class="ID" name="EventType"/>
                          </lvalue>
                          <rvalue class="ID" name="ES_NO_EVENT"/>
                        </block_items>
                      </iftrue>
                      <iffalse class="If">
                        <cond class="BinaryOp" op="==">
                          <left class="StructRef" type=".">
                            <name class="ID" name="ThisEvent"/>
                            <field class="ID" name="EventParam"/>
                          </left>
                          <right class="Constant" type="int" value="8"/>
                        </cond>
                        <iftrue class="Compound">
                          <block_items class="FuncCall">
                            <name class="ID" name="turnRight"/>
                            <args class="ExprList">
                              <exprs class="Constant" type="int" value="90"/>
                            </args>
                          </block_items>
                          <block_items class="FuncCall">
                            <name class="ID" name="ES_Timer_InitTimer"/>
                            <args class="ExprList">
                              <exprs class="Constant" type="int" value="0"/>
                              <exprs class="Constant" type="int" value="3000"/>
                            </args>
                          </block_items>
                          <block_items class="Assignment" op="=">
                            <lvalue class="ID" name="nextState"/>
                            <rvalue class="ID" name="Getting_Unstuck"/>
                          </block_items>
                          <block_items class="Assignment" op="=">
                            <lvalue class="ID" name="makeTransition"/>
                            <rvalue class="ID" name="TRUE"/>
                          </block_items>
                          <block_items class="Assignment" op="=">
                            <lvalue class="StructRef" type=".">
                              <name class="ID" name="ThisEvent"/>
                              <field class="ID" name="EventType"/>
                            </lvalue>
                            <rvalue class="ID" name="ES_NO_EVENT"/>
                          </block_items>
                        </iftrue>
                      </iffalse>
                    </iffalse>
                  </iffalse>
                </block_items>
              </iftrue>
            </stmts>
            <stmts class="Break"/>
          </block_items>
          <block_items class="Case">
            <expr class="ID" name="Getting_Unstuck"/>
            <stmts class="If">
              <cond class="BinaryOp" op="==">
                <left class="StructRef" type=".">
                  <name class="ID" name="ThisEvent"/>
                  <field class="ID" name="EventType"/>
                </left>
                <right class="ID" name="LIGHT_TO_DARK"/>
              </cond>
              <iftrue class="Compound">
                <block_items class="FuncCall">
                  <name class="ID" name="stopMovement"/>
                </block_items>
                <block_items class="Assignment" op="=">
                  <lvalue class="ID" name="nextState"/>
                  <rvalue class="ID" name="Hiding"/>
                </block_items>
                <block_items class="Assignment" op="=">
                  <lvalue class="ID" name="makeTransition"/>
                  <rvalue class="ID" name="TRUE"/>
                </block_items>
                <block_items class="Assignment" op="=">
                  <lvalue class="StructRef" type=".">
                    <name class="ID" name="ThisEvent"/>
                    <field class="ID" name="EventType"/>
                  </lvalue>
                  <rvalue class="ID" name="ES_NO_EVENT"/>
                </block_items>
              </iftrue>
            </stmts>
            <stmts class="If">
              <cond class="BinaryOp" op="&amp;&amp;">
                <left class="BinaryOp" op="==">
                  <left class="StructRef" type=".">
                    <name class="ID" name="ThisEvent"/>
                    <field class="ID" name="EventType"/>
                  </left>
                  <right class="ID" name="ES_TIMEOUT"/>
                </left>
                <right class="BinaryOp" op="==">
                  <left class="StructRef" type=".">
                    <name class="ID" name="ThisEvent"/>
                    <field class="ID" name="EventParam"/>
                  </left>
                  <right class="Constant" type="int" value="0"/>
                </right>
              </cond>
              <iftrue class="Compound">
                <block_items class="If">
                  <cond class="BinaryOp" op="==">
                    <left class="FuncCall">
                      <name class="ID" name="Roach_ReadBumpers"/>
                    </left>
                    <right class="Constant" type="int" value="0"/>
                  </cond>
                  <iftrue class="Compound">
                    <block_items class="FuncCall">
                      <name class="ID" name="goForward"/>
                      <args class="ExprList">
                        <exprs class="Constant" type="int" value="100"/>
                      </args>
                    </block_items>
                    <block_items class="Assignment" op="=">
                      <lvalue class="ID" name="nextState"/>
                      <rvalue class="ID" name="Moving"/>
                    </block_items>
                    <block_items class="Assignment" op="=">
                      <lvalue class="ID" name="makeTransition"/>
                      <rvalue class="ID" name="TRUE"/>
                    </block_items>
                    <block_items class="Assignment" op="=">
                      <lvalue class="StructRef" type=".">
                        <name class="ID" name="ThisEvent"/>
                        <field class="ID" name="EventType"/>
                      </lvalue>
                      <rvalue class="ID" name="ES_NO_EVENT"/>
                    </block_items>
                  </iftrue>
                  <iffalse class="Compound">
                    <block_items class="FuncCall">
                      <name class="ID" name="ES_Timer_InitTimer"/>
                      <args class="ExprList">
                        <exprs class="Constant" type="int" value="0"/>
                        <exprs class="Constant" type="int" value="3000"/>
                      </args>
                    </block_items>
                  </iffalse>
                </block_items>
              </iftrue>
            </stmts>
            <stmts class="Break"/>
          </block_items>
          <block_items class="Default">
            <stmts class="Break"/>
          </block_items>
        </stmt>
      </block_items>
      <block_items class="If">
        <cond class="BinaryOp" op="==">
          <left class="ID" name="makeTransition"/>
          <right class="ID" name="TRUE"/>
        </cond>
        <iftrue class="Compound">
          <block_items class="FuncCall">
            <name class="ID" name="RunTemplateFSM"/>
            <args class="ExprList">
              <exprs class="CompoundLiteral">
                <type class="Typename" name="" quals="[]" align="">
                  <type class="TypeDecl" declname="" quals="[]" align="">
                    <type class="IdentifierType" names="['ES_Event']"/>
                  </type>
                </type>
                <init class="InitList">
                  <exprs class="ID" name="ES_EXIT"/>
                  <exprs class="Constant" type="int" value="0x0000"/>
                </init>
              </exprs>
            </args>
          </block_items>
          <block_items class="Assignment" op="=">
            <lvalue class="ID" name="CurrentState"/>
            <rvalue class="ID" name="nextState"/>
          </block_items>
          <block_items class="FuncCall">
            <name class="ID" name="RunTemplateFSM"/>
            <args class="ExprList">
              <exprs class="CompoundLiteral">
                <type class="Typename" name="" quals="[]" align="">
                  <type class="TypeDecl" declname="" quals="[]" align="">
                    <type class="IdentifierType" names="['ES_Event']"/>
                  </type>
                </type>
                <init class="InitList">
                  <exprs class="ID" name="ES_ENTRY"/>
                  <exprs class="Constant" type="int" value="0x0000"/>
                </init>
              </exprs>
            </args>
          </block_items>
        </iftrue>
      </block_items>
      <block_items class="FuncCall">
        <name class="ID" name="ES_CheckTail"/>
        <args class="ExprList">
          <exprs class="ID" name="__FUNCTION__"/>
        </args>
      </block_items>
      <block_items class="Return">
        <expr class="ID" name="ThisEvent"/>
      </block_items>
    </body>
  </ext>
</root>

